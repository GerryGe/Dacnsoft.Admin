@using Abp.Collections.Extensions
@using Dacnsoft.Admin.Web.Views
@using Dacnsoft.Admin.Web.Views.Shared.Components.SideBarNav
@model SideBarNavViewModel
@{
    var calculateMenuUrl = new Func<string, string>((url) =>
    {
        if (string.IsNullOrEmpty(url))
        {
            return ApplicationPath;
        }

        if (UrlChecker.IsRooted(url))
        {
            return url;
        }

        return ApplicationPath + url;
    });
}
<aside class="main-sidebar">
    <section class="sidebar">
        <ul class="sidebar-menu" data-widget="tree">
            @*<li class="header">Main Menu</li>*@
            @foreach (var menuItem in Model.MainMenu.Items)
            {
                @if (menuItem.Items.IsNullOrEmpty())
                {
                    <li class="@(Model.ActiveMenuItemName == menuItem.Name ? "active" : "")">
                        <a href="@calculateMenuUrl(menuItem.Url)">
                            @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                            {
                                <i class="@menuItem.Icon"></i>
                            }
                            <span>@menuItem.DisplayName</span>
                        </a>
                    </li>
                }
                else
                {
                    <li class="treeview">
                        <a href="javascript:void(0);">
                            @if (!string.IsNullOrWhiteSpace(menuItem.Icon))
                            {
                                <i class="@menuItem.Icon"></i>
                            }
                            <span>@menuItem.DisplayName</span>
                            <span class="pull-right-container">
                                <i class="fa fa-angle-left pull-right"></i>
                            </span>
                        </a>
                        <ul class="treeview-menu">
                            @foreach (var subMenuItem in menuItem.Items)
                            {
                                @if (subMenuItem.Items.IsNullOrEmpty())
                                {
                                    <li class="@(Model.ActiveMenuItemName == subMenuItem.Name ? "active" : "")">
                                        <a href="@calculateMenuUrl(subMenuItem.Url)">
                                            @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                            {
                                                <i class="@subMenuItem.Icon"></i>
                                            }
                                            <span>@subMenuItem.DisplayName</span>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="treeview">
                                        <a href="javascript:void(0);" class="">
                                            @if (!string.IsNullOrWhiteSpace(subMenuItem.Icon))
                                            {
                                                <i class="@subMenuItem.Icon"></i>
                                            }
                                            <span>@subMenuItem.DisplayName</span>
                                            <span class="pull-right-container">
                                                <i class="fa fa-angle-left pull-right"></i>
                                            </span>
                                        </a>
                                        <ul class="treeview-menu">
                                            @foreach (var subSubMenuItem in subMenuItem.Items)
                                            {
                                                <li class="@(Model.ActiveMenuItemName == subSubMenuItem.Name ? "active" : "")">
                                                    <a href="@calculateMenuUrl(subSubMenuItem.Url)">
                                                        @subSubMenuItem.DisplayName
                                                    </a>
                                                </li>
                                            }
                                        </ul>
                                    </li>
                                }
                            }
                        </ul>
                    </li>
                }

            }
        </ul>
    </section>
</aside>
